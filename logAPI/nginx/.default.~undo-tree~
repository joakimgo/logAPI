"9700b80925dd4e027c8a3bc03792d3b945443a38"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#3=[nil nil ((218 . 219)) nil (23106 44002 357265 254000) 0 nil]) (("f" . 218) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . 1) (undo-tree-id1214 . 1) (undo-tree-id1215 . 1) (undo-tree-id1216 . 1) (undo-tree-id1217 . 1)) nil (23106 44002 357303 766000) 0 nil]) (("f" . 218) (undo-tree-id1218 . 1) (t 23106 41398 443484 512000)) nil (23106 44002 357309 933000) 0 nil]) ((74 . 75)) nil (23106 41398 420194 760000) 0 nil]) ((127 . 128)) nil (23106 41398 420232 695000) 0 nil]) ((183 . 187) (t 23106 41374 656825 468000)) nil (23106 41398 420236 305000) 0 nil]) ((164 . 174) 165 ("." . 164) (undo-tree-id1180 . -1) (undo-tree-id1181 . 1) (undo-tree-id1182 . 1) (undo-tree-id1183 . -1) (undo-tree-id1184 . 1) (undo-tree-id1185 . 1) 165) nil (23106 41374 641573 860000) 0 nil]) ((51 . 61) 52 (#("." 0 1 (face font-lock-string-face)) . 51) (undo-tree-id1186 . -1) (undo-tree-id1187 . 1) (undo-tree-id1188 . 1) (undo-tree-id1189 . 1) (undo-tree-id1190 . 1) (undo-tree-id1191 . 1) (undo-tree-id1192 . 1) (undo-tree-id1193 . 1) (undo-tree-id1194 . 1) (undo-tree-id1195 . 1) (undo-tree-id1196 . 1) (undo-tree-id1197 . -1) (undo-tree-id1198 . 1) (undo-tree-id1199 . 1) 52) nil (23106 41374 641601 722000) 0 nil]) ((104 . 105) (#("c" 0 1 (face font-lock-string-face)) . -104) (undo-tree-id1200 . -1) (undo-tree-id1201 . 1) 105 (95 . 105)) nil (23106 41374 641617 343000) 0 nil]) (("." . 95) (undo-tree-id1202 . 1) (undo-tree-id1203 . 1) (t 23106 41045 604227 106000)) nil (23106 41374 641623 569000) 0 nil]) ((146 . 154)) nil (23106 41045 597194 715000) 0 nil]) ((95 . 103)) nil (23106 41045 597202 22000) 0 nil]) ((51 . 59) (t 23106 40897 693590 323000)) nil (23106 41045 597206 344000) 0 nil]) ((186 . 193) ("logServer" . 186) (undo-tree-id1179 . 9) (t 23106 40886 642076 678000)) nil (23106 40897 687818 658000) 0 nil]) ((130 . 136) (#("${nginx_ssl_ca}" 0 1 (syntax-table #1=(15) nix-syntax-antiquote t face font-lock-preprocessor-face) 1 2 (nix-syntax-antiquote t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face)) 14 15 (nix-syntax-antiquote t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face))) . 130) (undo-tree-id1141 . -14) (undo-tree-id1142 . -14) (undo-tree-id1143 . 15) (undo-tree-id1144 . 15) (undo-tree-id1145 . 15) (undo-tree-id1146 . 15) (undo-tree-id1147 . 15) (undo-tree-id1148 . 15) (undo-tree-id1149 . 5) (undo-tree-id1150 . 5) (undo-tree-id1151 . -14) (undo-tree-id1152 . 15) (undo-tree-id1153 . -15) (undo-tree-id1154 . 15) (undo-tree-id1155 . 15) (undo-tree-id1156 . -14) (undo-tree-id1157 . 14) (undo-tree-id1158 . 15) (undo-tree-id1159 . 9) (undo-tree-id1160 . 14) (undo-tree-id1161 . 8) (undo-tree-id1162 . 9) (undo-tree-id1163 . 5) (undo-tree-id1164 . 8) (undo-tree-id1165 . 4) (undo-tree-id1166 . 5) (undo-tree-id1167 . 3) (undo-tree-id1168 . 4) (undo-tree-id1169 . 2) (undo-tree-id1170 . 3) (undo-tree-id1171 . 1) (undo-tree-id1172 . 2) (undo-tree-id1173 . -1) (undo-tree-id1174 . -2) (undo-tree-id1175 . 14) (undo-tree-id1176 . -2) (undo-tree-id1177 . 1) (undo-tree-id1178 . -15) 144 (t 23106 40871 163747 633000)) nil (23106 40886 623852 111000) 0 nil]) ((51 . 57) (#("cert" 0 4 (face font-lock-string-face)) . 51) (undo-tree-id1136 . 4) (undo-tree-id1137 . 3) (undo-tree-id1138 . 2) (undo-tree-id1139 . 1) (undo-tree-id1140 . 4) (t 23106 40867 104921 506000)) nil (23106 40871 157889 670000) 0 nil]) ((91 . 99) (#("-" 0 1 (face font-lock-string-face)) . -91) (undo-tree-id697 . -1) (undo-tree-id698 . 1) 92 (91 . 92) (85 . 91) (#("cert" 0 4 (face font-lock-string-face)) . 85) (undo-tree-id699 . -3) (undo-tree-id700 . -3) (undo-tree-id701 . 4) (undo-tree-id702 . 3) (undo-tree-id703 . 2) (undo-tree-id704 . 1) (undo-tree-id705 . 1) (undo-tree-id706 . 1) (undo-tree-id707 . -3) (undo-tree-id708 . -3) (undo-tree-id709 . -3) (undo-tree-id710 . 1) (undo-tree-id711 . 1) (undo-tree-id712 . 4) (undo-tree-id713 . 1)) nil (23106 40867 85883 178000) 0 nil]) ((85 . 89) (#("s" 0 1 (face font-lock-string-face)) . -85) (undo-tree-id714 . -1) (undo-tree-id715 . 1) (#("e" 0 1 (face font-lock-string-face)) . -86) (undo-tree-id716 . -1) (undo-tree-id717 . 1) (#("r" 0 1 (face font-lock-string-face)) . -87) (undo-tree-id718 . -1) (undo-tree-id719 . 1) (#("v" 0 1 (face font-lock-string-face)) . -88) (undo-tree-id720 . -1) (undo-tree-id721 . 1) (#("e" 0 1 (face font-lock-string-face)) . -89) (undo-tree-id722 . -1) (undo-tree-id723 . 1) 90 (#("r" 0 1 (face font-lock-string-face)) . -90) (undo-tree-id724 . -1) (undo-tree-id725 . 1) (#("_" 0 1 (face font-lock-string-face)) . -91) (undo-tree-id726 . -1) (undo-tree-id727 . 1) (#("k" 0 1 (face font-lock-string-face)) . -92) (undo-tree-id728 . -1) (undo-tree-id729 . 1) (#("e" 0 1 (face font-lock-string-face)) . -93) (undo-tree-id730 . -1) (undo-tree-id731 . 1) (#("y" 0 1 (face font-lock-string-face)) . -94) (undo-tree-id732 . -1) (undo-tree-id733 . 1) 95 (85 . 95)) nil (23106 40867 85925 867000) 0 nil]) ((#("}" 0 1 (nix-syntax-antiquote t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face))) . 85) (undo-tree-id734 . 1) (undo-tree-id735 . 1) (undo-tree-id736 . 1) (undo-tree-id737 . 1) (undo-tree-id738 . 1) (undo-tree-id739 . 1) (undo-tree-id740 . 1) (undo-tree-id741 . 1) (undo-tree-id742 . 1) (undo-tree-id743 . 1) (undo-tree-id744 . 1) (undo-tree-id745 . 1) (undo-tree-id746 . 1) (undo-tree-id747 . 1) (undo-tree-id748 . 1) (undo-tree-id749 . 1) (undo-tree-id750 . 1) (undo-tree-id751 . 1) (undo-tree-id752 . 1) (undo-tree-id753 . 1) (undo-tree-id754 . 1) (undo-tree-id755 . 1) (undo-tree-id756 . 1) (undo-tree-id757 . 1) (undo-tree-id758 . 1) (undo-tree-id759 . 1) (undo-tree-id760 . 1) (undo-tree-id761 . 1) (undo-tree-id762 . 1) (undo-tree-id763 . 1) (undo-tree-id764 . 1) (undo-tree-id765 . 1) (undo-tree-id766 . 1) (undo-tree-id767 . 1) (undo-tree-id768 . 1) (undo-tree-id769 . 1) (undo-tree-id770 . 1) (undo-tree-id771 . 1) (undo-tree-id772 . 1) (undo-tree-id773 . 1) (undo-tree-id774 . 1)) nil (23106 40867 86009 658000) 0 nil]) (("y" . 85) (undo-tree-id775 . 1) (undo-tree-id776 . 1) (undo-tree-id777 . 1) (undo-tree-id778 . 1) (undo-tree-id779 . 1) (undo-tree-id780 . 1) (undo-tree-id781 . 1) (undo-tree-id782 . 1) (undo-tree-id783 . 1) (undo-tree-id784 . 1) (undo-tree-id785 . 1) (undo-tree-id786 . 1) (undo-tree-id787 . 1) (undo-tree-id788 . 1) (undo-tree-id789 . 1) (undo-tree-id790 . 1) (undo-tree-id791 . 1) (undo-tree-id792 . 1) (undo-tree-id793 . 1) (undo-tree-id794 . 1) (undo-tree-id795 . 1) (undo-tree-id796 . 1) (undo-tree-id797 . 1) (undo-tree-id798 . 1) (undo-tree-id799 . 1) (undo-tree-id800 . 1) (undo-tree-id801 . 1) (undo-tree-id802 . 1) (undo-tree-id803 . 1) (undo-tree-id804 . 1) (undo-tree-id805 . 1) (undo-tree-id806 . 1) (undo-tree-id807 . 1) (undo-tree-id808 . 1) (undo-tree-id809 . 1) (undo-tree-id810 . 1) (undo-tree-id811 . 1) (undo-tree-id812 . 1) (undo-tree-id813 . 1)) nil (23106 40867 86062 776000) 0 nil]) (("e" . 85) (undo-tree-id814 . 1) (undo-tree-id815 . 1) (undo-tree-id816 . 1) (undo-tree-id817 . 1) (undo-tree-id818 . 1) (undo-tree-id819 . 1) (undo-tree-id820 . 1) (undo-tree-id821 . 1) (undo-tree-id822 . 1) (undo-tree-id823 . 1) (undo-tree-id824 . 1) (undo-tree-id825 . 1) (undo-tree-id826 . 1) (undo-tree-id827 . 1) (undo-tree-id828 . 1) (undo-tree-id829 . 1) (undo-tree-id830 . 1) (undo-tree-id831 . 1) (undo-tree-id832 . 1) (undo-tree-id833 . 1) (undo-tree-id834 . 1) (undo-tree-id835 . 1) (undo-tree-id836 . 1) (undo-tree-id837 . 1) (undo-tree-id838 . 1) (undo-tree-id839 . 1) (undo-tree-id840 . 1) (undo-tree-id841 . 1) (undo-tree-id842 . 1) (undo-tree-id843 . 1) (undo-tree-id844 . 1) (undo-tree-id845 . 1) (undo-tree-id846 . 1) (undo-tree-id847 . 1) (undo-tree-id848 . 1) (undo-tree-id849 . 1) (undo-tree-id850 . 1)) nil (23106 40867 86112 895000) 0 nil]) (("k" . 85) (undo-tree-id851 . 1) (undo-tree-id852 . 1) (undo-tree-id853 . 1) (undo-tree-id854 . 1) (undo-tree-id855 . 1) (undo-tree-id856 . 1) (undo-tree-id857 . 1) (undo-tree-id858 . 1) (undo-tree-id859 . 1) (undo-tree-id860 . 1) (undo-tree-id861 . 1) (undo-tree-id862 . 1) (undo-tree-id863 . 1) (undo-tree-id864 . 1) (undo-tree-id865 . 1) (undo-tree-id866 . 1) (undo-tree-id867 . 1) (undo-tree-id868 . 1) (undo-tree-id869 . 1) (undo-tree-id870 . 1) (undo-tree-id871 . 1) (undo-tree-id872 . 1) (undo-tree-id873 . 1) (undo-tree-id874 . 1) (undo-tree-id875 . 1) (undo-tree-id876 . 1) (undo-tree-id877 . 1) (undo-tree-id878 . 1) (undo-tree-id879 . 1) (undo-tree-id880 . 1) (undo-tree-id881 . 1) (undo-tree-id882 . 1) (undo-tree-id883 . 1) (undo-tree-id884 . 1) (undo-tree-id885 . 1)) nil (23106 40867 86159 470000) 0 nil]) (("_" . 85) (undo-tree-id886 . 1) (undo-tree-id887 . 1) (undo-tree-id888 . 1) (undo-tree-id889 . 1) (undo-tree-id890 . 1) (undo-tree-id891 . 1) (undo-tree-id892 . 1) (undo-tree-id893 . 1) (undo-tree-id894 . 1) (undo-tree-id895 . 1) (undo-tree-id896 . 1) (undo-tree-id897 . 1) (undo-tree-id898 . 1) (undo-tree-id899 . 1) (undo-tree-id900 . 1) (undo-tree-id901 . 1) (undo-tree-id902 . 1) (undo-tree-id903 . 1) (undo-tree-id904 . 1) (undo-tree-id905 . 1) (undo-tree-id906 . 1) (undo-tree-id907 . 1) (undo-tree-id908 . 1) (undo-tree-id909 . 1) (undo-tree-id910 . 1) (undo-tree-id911 . 1) (undo-tree-id912 . 1) (undo-tree-id913 . 1) (undo-tree-id914 . 1) (undo-tree-id915 . 1) (undo-tree-id916 . 1) (undo-tree-id917 . 1) (undo-tree-id918 . 1)) nil (23106 40867 86201 648000) 0 nil]) (("l" . 85) (undo-tree-id919 . 1) (undo-tree-id920 . 1) (undo-tree-id921 . 1) (undo-tree-id922 . 1) (undo-tree-id923 . 1) (undo-tree-id924 . 1) (undo-tree-id925 . 1) (undo-tree-id926 . 1) (undo-tree-id927 . 1) (undo-tree-id928 . 1) (undo-tree-id929 . 1) (undo-tree-id930 . 1) (undo-tree-id931 . 1) (undo-tree-id932 . 1) (undo-tree-id933 . 1) (undo-tree-id934 . 1) (undo-tree-id935 . 1) (undo-tree-id936 . 1) (undo-tree-id937 . 1) (undo-tree-id938 . 1) (undo-tree-id939 . 1) (undo-tree-id940 . 1) (undo-tree-id941 . 1) (undo-tree-id942 . 1) (undo-tree-id943 . 1) (undo-tree-id944 . 1) (undo-tree-id945 . 1) (undo-tree-id946 . 1) (undo-tree-id947 . 1) (undo-tree-id948 . 1) (undo-tree-id949 . 1)) nil (23106 40867 86244 734000) 0 nil]) (("s" . 85) (undo-tree-id950 . 1) (undo-tree-id951 . 1) (undo-tree-id952 . 1) (undo-tree-id953 . 1) (undo-tree-id954 . 1) (undo-tree-id955 . 1) (undo-tree-id956 . 1) (undo-tree-id957 . 1) (undo-tree-id958 . 1) (undo-tree-id959 . 1) (undo-tree-id960 . 1) (undo-tree-id961 . 1) (undo-tree-id962 . 1) (undo-tree-id963 . 1) (undo-tree-id964 . 1) (undo-tree-id965 . 1) (undo-tree-id966 . 1) (undo-tree-id967 . 1) (undo-tree-id968 . 1) (undo-tree-id969 . 1) (undo-tree-id970 . 1) (undo-tree-id971 . 1) (undo-tree-id972 . 1) (undo-tree-id973 . 1) (undo-tree-id974 . 1) (undo-tree-id975 . 1) (undo-tree-id976 . 1) (undo-tree-id977 . 1) (undo-tree-id978 . 1)) nil (23106 40867 86284 718000) 0 nil]) (("s" . 85) (undo-tree-id979 . 1) (undo-tree-id980 . 1) (undo-tree-id981 . 1) (undo-tree-id982 . 1) (undo-tree-id983 . 1) (undo-tree-id984 . 1) (undo-tree-id985 . 1) (undo-tree-id986 . 1) (undo-tree-id987 . 1) (undo-tree-id988 . 1) (undo-tree-id989 . 1) (undo-tree-id990 . 1) (undo-tree-id991 . 1) (undo-tree-id992 . 1) (undo-tree-id993 . 1) (undo-tree-id994 . 1) (undo-tree-id995 . 1) (undo-tree-id996 . 1) (undo-tree-id997 . 1) (undo-tree-id998 . 1) (undo-tree-id999 . 1) (undo-tree-id1000 . 1) (undo-tree-id1001 . 1) (undo-tree-id1002 . 1) (undo-tree-id1003 . 1) (undo-tree-id1004 . 1) (undo-tree-id1005 . 1)) nil (23106 40867 86318 588000) 0 nil]) (("_" . 85) (undo-tree-id1006 . 1) (undo-tree-id1007 . 1) (undo-tree-id1008 . 1) (undo-tree-id1009 . 1) (undo-tree-id1010 . 1) (undo-tree-id1011 . 1) (undo-tree-id1012 . 1) (undo-tree-id1013 . 1) (undo-tree-id1014 . 1) (undo-tree-id1015 . 1) (undo-tree-id1016 . 1) (undo-tree-id1017 . 1) (undo-tree-id1018 . 1) (undo-tree-id1019 . 1) (undo-tree-id1020 . 1) (undo-tree-id1021 . 1) (undo-tree-id1022 . 1) (undo-tree-id1023 . 1) (undo-tree-id1024 . 1) (undo-tree-id1025 . 1) (undo-tree-id1026 . 1) (undo-tree-id1027 . 1) (undo-tree-id1028 . 1) (undo-tree-id1029 . 1) (undo-tree-id1030 . 1)) nil (23106 40867 86370 645000) 0 nil]) (("x" . 85) (undo-tree-id1031 . 1) (undo-tree-id1032 . 1) (undo-tree-id1033 . 1) (undo-tree-id1034 . 1) (undo-tree-id1035 . 1) (undo-tree-id1036 . 1) (undo-tree-id1037 . 1) (undo-tree-id1038 . 1) (undo-tree-id1039 . 1) (undo-tree-id1040 . 1) (undo-tree-id1041 . 1) (undo-tree-id1042 . 1) (undo-tree-id1043 . 1) (undo-tree-id1044 . 1) (undo-tree-id1045 . 1) (undo-tree-id1046 . 1) (undo-tree-id1047 . 1) (undo-tree-id1048 . 1) (undo-tree-id1049 . 1) (undo-tree-id1050 . 1) (undo-tree-id1051 . 1) (undo-tree-id1052 . 1) (undo-tree-id1053 . 1)) nil (23106 40867 86399 144000) 0 nil]) (("n" . 85) (undo-tree-id1054 . 1) (undo-tree-id1055 . 1) (undo-tree-id1056 . 1) (undo-tree-id1057 . 1) (undo-tree-id1058 . 1) (undo-tree-id1059 . 1) (undo-tree-id1060 . 1) (undo-tree-id1061 . 1) (undo-tree-id1062 . 1) (undo-tree-id1063 . 1) (undo-tree-id1064 . 1) (undo-tree-id1065 . 1) (undo-tree-id1066 . 1) (undo-tree-id1067 . 1) (undo-tree-id1068 . 1) (undo-tree-id1069 . 1) (undo-tree-id1070 . 1) (undo-tree-id1071 . 1) (undo-tree-id1072 . 1) (undo-tree-id1073 . 1) (undo-tree-id1074 . 1)) nil (23106 40867 86430 495000) 0 nil]) (("i" . 85) (undo-tree-id1075 . 1) (undo-tree-id1076 . 1) (undo-tree-id1077 . 1) (undo-tree-id1078 . 1) (undo-tree-id1079 . 1) (undo-tree-id1080 . 1) (undo-tree-id1081 . 1) (undo-tree-id1082 . 1) (undo-tree-id1083 . 1) (undo-tree-id1084 . 1) (undo-tree-id1085 . 1) (undo-tree-id1086 . 1) (undo-tree-id1087 . 1) (undo-tree-id1088 . 1) (undo-tree-id1089 . 1) (undo-tree-id1090 . 1) (undo-tree-id1091 . 1) (undo-tree-id1092 . 1) (undo-tree-id1093 . 1)) nil (23106 40867 86457 223000) 0 nil]) (("g" . 85) (undo-tree-id1094 . 1) (undo-tree-id1095 . 1) (undo-tree-id1096 . 1) (undo-tree-id1097 . 1) (undo-tree-id1098 . 1) (undo-tree-id1099 . 1) (undo-tree-id1100 . 1) (undo-tree-id1101 . 1) (undo-tree-id1102 . 1) (undo-tree-id1103 . 1) (undo-tree-id1104 . 1) (undo-tree-id1105 . 1) (undo-tree-id1106 . 1) (undo-tree-id1107 . 1) (undo-tree-id1108 . 1) (undo-tree-id1109 . 1) (undo-tree-id1110 . 1) (undo-tree-id1111 . 1)) nil (23106 40867 86483 699000) 0 nil]) (("n" . 85) (undo-tree-id1112 . 1) (undo-tree-id1113 . 1) (undo-tree-id1114 . 1) (undo-tree-id1115 . 1) (undo-tree-id1116 . 1) (undo-tree-id1117 . 1) (undo-tree-id1118 . 1) (undo-tree-id1119 . 1) (undo-tree-id1120 . 1) (undo-tree-id1121 . 1) (undo-tree-id1122 . 1) (undo-tree-id1123 . 1)) nil (23106 40867 86571 317000) 0 nil]) ((#("{" 0 1 (nix-syntax-antiquote t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face))) . 85) (undo-tree-id1124 . 1) (undo-tree-id1125 . 1) (undo-tree-id1126 . 1) (undo-tree-id1127 . 1) (undo-tree-id1128 . 1) (undo-tree-id1129 . 1) (undo-tree-id1130 . 1) (undo-tree-id1131 . 1) (undo-tree-id1132 . -1)) nil (23106 40867 86587 343000) 0 nil]) ((#("$" 0 1 (syntax-table #1# nix-syntax-antiquote t face font-lock-preprocessor-face)) . 85) (undo-tree-id1133 . 1) (undo-tree-id1134 . 1) (undo-tree-id1135 . 1) (t 23106 40806 647409 31000)) nil (23106 40867 86593 818000) 0 nil]) ((171 . 172) ("f" . -171) (undo-tree-id695 . -1) (171 . 172) 170) nil (23106 40806 642708 437000) 0 nil]) ((170 . 171) (#("n" 0 1 (face font-lock-string-face)) . 170) (undo-tree-id696 . 1) (t 23106 40774 898632 448000)) nil (23106 40806 642718 551000) 0 nil]) ((51 . 59) (#("${nginx_ssl_cert}" 0 1 (syntax-table #1# nix-syntax-antiquote t face font-lock-preprocessor-face) 1 2 (nix-syntax-antiquote t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face)) 16 17 (nix-syntax-antiquote t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face))) . 51) (undo-tree-id652 . -16) (undo-tree-id653 . -16) (undo-tree-id654 . 17) (undo-tree-id655 . 17) (undo-tree-id656 . 17) (undo-tree-id657 . 17) (undo-tree-id658 . 17) (undo-tree-id659 . 17) (undo-tree-id660 . 17) (undo-tree-id661 . 17) (undo-tree-id662 . -16) (undo-tree-id663 . 17) (undo-tree-id664 . 17) (undo-tree-id665 . -17) (undo-tree-id666 . 17) (undo-tree-id667 . 17) (undo-tree-id668 . -16) (undo-tree-id669 . 16) (undo-tree-id670 . 17) (undo-tree-id671 . 11) (undo-tree-id672 . 16) (undo-tree-id673 . 10) (undo-tree-id674 . 11) (undo-tree-id675 . 7) (undo-tree-id676 . 10) (undo-tree-id677 . 6) (undo-tree-id678 . 7) (undo-tree-id679 . 5) (undo-tree-id680 . 6) (undo-tree-id681 . 4) (undo-tree-id682 . 5) (undo-tree-id683 . 3) (undo-tree-id684 . 4) (undo-tree-id685 . 2) (undo-tree-id686 . 3) (undo-tree-id687 . 1) (undo-tree-id688 . 2) (undo-tree-id689 . -1) (undo-tree-id690 . -2) (undo-tree-id691 . 16) (undo-tree-id692 . -2) (undo-tree-id693 . 1) (undo-tree-id694 . -17) 67 (t 23106 34738 969464 462000)) nil (23106 40774 890290 925000) 0 nil]) (("    listen  80;
" . 11) (undo-tree-id647 . -16) (undo-tree-id648 . -16) (undo-tree-id649 . -16) (undo-tree-id650 . -4) (undo-tree-id651 . 12) 15) nil (23106 34738 941422 964000) 0 nil]) ((nil rear-nonsticky nil 30 . 31) (27 . 198) 30 (t 23106 34395 823300 792000)) nil (23106 34738 941432 438000) 0 nil]) ((153 . 158) (t 23106 34353 285520 258000)) nil (23106 34395 818443 621000) 0 nil]) (("env LOGHOST:

upstream app {
    server $ENV{\"LOGHOST\"}:5000;
}
" . 1) (undo-tree-id467 . -63) (undo-tree-id468 . -62) (undo-tree-id469 . -11) (undo-tree-id470 . -63) (undo-tree-id471 . 1) (undo-tree-id472 . 1) (undo-tree-id473 . 1) (undo-tree-id474 . 2) (undo-tree-id475 . 64) (undo-tree-id476 . -54) (undo-tree-id477 . -55) (undo-tree-id478 . -44) (undo-tree-id479 . -45) (undo-tree-id480 . -27) (undo-tree-id481 . -28) (undo-tree-id482 . 35) (undo-tree-id483 . 2) (undo-tree-id484 . 50) (undo-tree-id485 . 35) (undo-tree-id486 . 50) (undo-tree-id487 . 50) (undo-tree-id488 . 51) (undo-tree-id489 . 50) (undo-tree-id490 . 51) (undo-tree-id491 . 51) (undo-tree-id492 . 51) (undo-tree-id493 . 51) (undo-tree-id494 . 51) (undo-tree-id495 . 51) (undo-tree-id496 . 51) (undo-tree-id497 . 51) (undo-tree-id498 . 50) (undo-tree-id499 . 51) (undo-tree-id500 . 50) (undo-tree-id501 . 50) (undo-tree-id502 . 38) (undo-tree-id503 . 50) (undo-tree-id504 . 38) (undo-tree-id505 . 38) (undo-tree-id506 . 38) (undo-tree-id507 . 41) (undo-tree-id508 . 38) (undo-tree-id509 . 40) (undo-tree-id510 . 38) (undo-tree-id511 . 39) (undo-tree-id512 . 39) (undo-tree-id513 . 39) (undo-tree-id514 . 51) (undo-tree-id515 . 39) (undo-tree-id516 . 52) (undo-tree-id517 . 51) (undo-tree-id518 . 52) (undo-tree-id519 . 52) (undo-tree-id520 . 52) (undo-tree-id521 . 52) (undo-tree-id522 . 52) (undo-tree-id523 . 52) (undo-tree-id524 . 52) (undo-tree-id525 . 52) (undo-tree-id526 . 52) (undo-tree-id527 . 60) (undo-tree-id528 . 52) (undo-tree-id529 . 59) (undo-tree-id530 . 52) (undo-tree-id531 . 58) (undo-tree-id532 . 52) (undo-tree-id533 . 57) (undo-tree-id534 . 52) (undo-tree-id535 . 56) (undo-tree-id536 . 52) (undo-tree-id537 . 55) (undo-tree-id538 . 52) (undo-tree-id539 . 54) (undo-tree-id540 . 52) (undo-tree-id541 . 53) (undo-tree-id542 . 53) (undo-tree-id543 . 53) (undo-tree-id544 . 51) (undo-tree-id545 . 53) (undo-tree-id546 . 39) (undo-tree-id547 . 51) (undo-tree-id548 . 24) (undo-tree-id549 . 39) (undo-tree-id550 . 23) (undo-tree-id551 . 24) (undo-tree-id552 . 22) (undo-tree-id553 . 23) (undo-tree-id554 . 21) (undo-tree-id555 . 22) (undo-tree-id556 . 20) (undo-tree-id557 . 21) (undo-tree-id558 . 19) (undo-tree-id559 . 20) (undo-tree-id560 . 11) (undo-tree-id561 . 19) (undo-tree-id562 . -45) (undo-tree-id563 . -46) (undo-tree-id564 . 11) (undo-tree-id565 . 11) (undo-tree-id566 . -45) (undo-tree-id567 . -46) (undo-tree-id568 . 11) (undo-tree-id569 . 11) (undo-tree-id570 . 11) (undo-tree-id571 . 11) (undo-tree-id572 . 11) (undo-tree-id573 . 11) (undo-tree-id574 . 11) (undo-tree-id575 . 11) (undo-tree-id576 . 11) (undo-tree-id577 . 11) (undo-tree-id578 . 11) (undo-tree-id579 . 11) (undo-tree-id580 . 11) (undo-tree-id581 . 11) (undo-tree-id582 . 11) (undo-tree-id583 . 11) (undo-tree-id584 . 11) (undo-tree-id585 . 11) (undo-tree-id586 . 11) (undo-tree-id587 . 11) (undo-tree-id588 . 11) (undo-tree-id589 . 11) (undo-tree-id590 . 11) (undo-tree-id591 . 11) (undo-tree-id592 . 11) (undo-tree-id593 . 11) (undo-tree-id594 . 11) (undo-tree-id595 . 11) (undo-tree-id596 . 11) (undo-tree-id597 . 18) (undo-tree-id598 . 11) (undo-tree-id599 . 17) (undo-tree-id600 . 11) (undo-tree-id601 . 16) (undo-tree-id602 . 11) (undo-tree-id603 . 15) (undo-tree-id604 . 11) (undo-tree-id605 . 14) (undo-tree-id606 . 11) (undo-tree-id607 . 13) (undo-tree-id608 . 11) (undo-tree-id609 . 12) (undo-tree-id610 . 12) (undo-tree-id611 . 12) (undo-tree-id612 . 2) (undo-tree-id613 . 12) (undo-tree-id614 . -54) (undo-tree-id615 . -55) (undo-tree-id616 . -44) (undo-tree-id617 . -45) (undo-tree-id618 . -27) (undo-tree-id619 . -28) (undo-tree-id620 . 2) (undo-tree-id621 . -46) (undo-tree-id622 . -63) (undo-tree-id623 . 2) (undo-tree-id624 . 4) (undo-tree-id625 . 2) (undo-tree-id626 . 37) (undo-tree-id627 . 4) (undo-tree-id628 . 51) (undo-tree-id629 . 37) (undo-tree-id630 . 53) (undo-tree-id631 . 51) (undo-tree-id632 . 53) (undo-tree-id633 . 53) (undo-tree-id634 . -64) (undo-tree-id635 . 53) (undo-tree-id636 . 53) (undo-tree-id637 . -11) (undo-tree-id638 . -63) (undo-tree-id639 . 51) (undo-tree-id640 . 53) (undo-tree-id641 . 39) (undo-tree-id642 . 51) (undo-tree-id643 . 24) (undo-tree-id644 . 39) (undo-tree-id645 . 1) (undo-tree-id646 . 24) 64 (t 23106 34344 743765 132000)) nil (23106 34353 280209 223000) 0 nil]) ((210 . 217) (#("app" 0 3 (face font-lock-string-face)) . 210) (undo-tree-id459 . -3) (undo-tree-id460 . -3) (undo-tree-id461 . 3) (undo-tree-id462 . 2) (undo-tree-id463 . 1) (undo-tree-id464 . -3) (undo-tree-id465 . -3) (undo-tree-id466 . 3) (t 23106 33742 406359 53000)) nil (23106 34344 738270 492000) 0 nil]) ((#(" " 0 1 (face font-lock-string-face)) . -214) (undo-tree-id333 . -1) (undo-tree-id334 . 1) 215 (214 . 215) (#("§" 0 1 (face font-lock-string-face)) . -214) (undo-tree-id335 . -1) (undo-tree-id336 . 1) 215 (210 . 215) (#("$ENV{LOGAPIHOST}:3000;" 0 16 (face font-lock-string-face) 16 17 (syntax-table #2=(15) face font-lock-string-face) 17 22 (face font-lock-string-face)) . 210) (undo-tree-id337 . -11) (undo-tree-id338 . 6) (undo-tree-id339 . 6) (undo-tree-id340 . 6) (undo-tree-id341 . 6) (undo-tree-id342 . 6) (undo-tree-id343 . 6) (undo-tree-id344 . -5) (undo-tree-id345 . -5) (undo-tree-id346 . 7) (undo-tree-id347 . 7) (undo-tree-id348 . -5) (undo-tree-id349 . -5) (undo-tree-id350 . -5) (undo-tree-id351 . 7) (undo-tree-id352 . 7) (undo-tree-id353 . -5) (undo-tree-id354 . 7) (undo-tree-id355 . 7) (undo-tree-id356 . -5) (undo-tree-id357 . 11) (undo-tree-id358 . 11) (undo-tree-id359 . -5) (undo-tree-id360 . -11) (undo-tree-id361 . -11) (undo-tree-id362 . -11) (undo-tree-id363 . 11) (undo-tree-id364 . 11) (undo-tree-id365 . 17) (undo-tree-id366 . 11) (undo-tree-id367 . -5) (undo-tree-id368 . -5) (undo-tree-id369 . 18) (undo-tree-id370 . 17) (undo-tree-id371 . 17) (undo-tree-id372 . 18) (undo-tree-id373 . 17) (undo-tree-id374 . 17) (undo-tree-id375 . -4) (undo-tree-id376 . -5) (undo-tree-id377 . -4) (undo-tree-id378 . -5) (undo-tree-id379 . -4) (undo-tree-id380 . -5) (undo-tree-id381 . -4) (undo-tree-id382 . -5) (undo-tree-id383 . -4) (undo-tree-id384 . -5) (undo-tree-id385 . -4) (undo-tree-id386 . -5) (undo-tree-id387 . 7) (undo-tree-id388 . 17) (undo-tree-id389 . 7) (undo-tree-id390 . 7) (undo-tree-id391 . -4) (undo-tree-id392 . -5) (undo-tree-id393 . 7) (undo-tree-id394 . 7) (undo-tree-id395 . -4) (undo-tree-id396 . -5) (undo-tree-id397 . -4) (undo-tree-id398 . -5) (undo-tree-id399 . -4) (undo-tree-id400 . -5) (undo-tree-id401 . 7) (undo-tree-id402 . 1) (undo-tree-id403 . 1) (undo-tree-id404 . 1) (undo-tree-id405 . 1) (undo-tree-id406 . -11) (undo-tree-id407 . 22)) nil (23106 33742 390283 907000) 0 nil]) ((65 . 66) 72) nil (23106 33742 390298 331000) 0 nil]) ((47 . 54) ("APP_WEB_1_PORT_5000_TCP_ADDR" . 47) (undo-tree-id408 . -27) (undo-tree-id409 . -27) (undo-tree-id410 . -27) (undo-tree-id411 . 28) (undo-tree-id412 . -28) (undo-tree-id413 . 28) (undo-tree-id414 . 28) (undo-tree-id415 . -27) (undo-tree-id416 . 26) (undo-tree-id417 . 28) (undo-tree-id418 . 25) (undo-tree-id419 . 26) (undo-tree-id420 . 22) (undo-tree-id421 . 25) (undo-tree-id422 . 21) (undo-tree-id423 . 22) (undo-tree-id424 . 20) (undo-tree-id425 . 21) (undo-tree-id426 . 19) (undo-tree-id427 . 20) (undo-tree-id428 . 15) (undo-tree-id429 . 19) (undo-tree-id430 . 14) (undo-tree-id431 . 15) (undo-tree-id432 . 10) (undo-tree-id433 . 14) (undo-tree-id434 . 9) (undo-tree-id435 . 10) (undo-tree-id436 . 6) (undo-tree-id437 . 9) (undo-tree-id438 . 5) (undo-tree-id439 . 6) (undo-tree-id440 . 1) (undo-tree-id441 . 5) 74) nil (23106 33742 390349 370000) 0 nil]) ((5 . 13) ("APP_WEB_1_PORT_5000_TCP_ADDR;" . 5) (undo-tree-id442 . 22) (undo-tree-id443 . 25) (undo-tree-id444 . 22) (undo-tree-id445 . 26) (undo-tree-id446 . 25) (undo-tree-id447 . 29) (undo-tree-id448 . 26)) nil (23106 33742 390364 490000) 0 nil]) ((45 . 48) ("gunicorn" . 45) (undo-tree-id449 . 8)) nil (23106 33742 390369 582000) 0 nil]) (("# Django app is served by Gunicorn, running under port 5000 (via Foreman)
" . 36) (undo-tree-id450 . 74) (undo-tree-id451 . 74) (undo-tree-id452 . 74)) nil (23106 33742 390375 465000) 0 nil]) (("# Nginx host configuration for django_app
" . 35) (undo-tree-id453 . -11) (undo-tree-id454 . 42) (undo-tree-id455 . 36) (undo-tree-id456 . 42) (undo-tree-id457 . 31) (undo-tree-id458 . 36) 46) nil (23106 33742 390398 97000) 0 nil]) ((1 . 227)) nil (23106 33742 390401 48000) 0 nil]) ((1 . 2) 8 (t 23106 33622 391995 607000)) nil (23106 33742 390403 384000) 0 nil]) ((#(";" 0 1 (face font-lock-string-face)) . 167) (undo-tree-id328 . 1) (undo-tree-id329 . 1) (undo-tree-id330 . 1) (undo-tree-id331 . 1) (undo-tree-id332 . 1) (t 23106 33610 71472 389000)) nil (23106 33622 387190 889000) 0 nil]) ((167 . 168) (t 23106 33524 152913 72000)) nil (23106 33610 67622 558000) 0 nil]) ((#("\"" 0 1 (face font-lock-string-face)) . 160) (undo-tree-id306 . 1) (undo-tree-id307 . 1) (undo-tree-id308 . 1) (undo-tree-id309 . 1) (undo-tree-id310 . 1) (undo-tree-id311 . 1) (undo-tree-id312 . 1) (undo-tree-id313 . 1) (undo-tree-id314 . 1) (undo-tree-id315 . -1)) nil (23106 33524 149011 135000) 0 nil]) ((#("\"" 0 1 (face font-lock-string-face)) . 150) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . 1) (undo-tree-id326 . 1) (undo-tree-id327 . -1) (t 23106 33493 512285 413000)) nil (23106 33524 149035 41000) 0 nil]) ((#("-" 0 1 (face font-lock-string-face)) . 157) (undo-tree-id304 . 1) (undo-tree-id305 . 1) (t 23106 33454 656946 418000)) nil (23106 33493 507438 195000) 0 nil]) ((151 . 162) (#("APPLOC" 0 6 (face font-lock-string-face)) . 151) (undo-tree-id268 . -5) (undo-tree-id269 . -5) (undo-tree-id270 . 6) (undo-tree-id271 . 5) (undo-tree-id272 . 4) (undo-tree-id273 . 3) (undo-tree-id274 . 2) (undo-tree-id275 . 1) (undo-tree-id276 . 1) (undo-tree-id277 . 1) (undo-tree-id278 . 1) (undo-tree-id279 . 1) (undo-tree-id280 . -5) (undo-tree-id281 . -5) (undo-tree-id282 . 1) (undo-tree-id283 . 1) (undo-tree-id284 . -5) (undo-tree-id285 . -5) (undo-tree-id286 . -5) (undo-tree-id287 . -5) (undo-tree-id288 . 1) (undo-tree-id289 . 1) (undo-tree-id290 . -5) (undo-tree-id291 . -5) (undo-tree-id292 . -5) (undo-tree-id293 . 1) (undo-tree-id294 . 1) (undo-tree-id295 . 1) (undo-tree-id296 . 1) (undo-tree-id297 . -5) (undo-tree-id298 . -5) (undo-tree-id299 . -5) (undo-tree-id300 . 1) (undo-tree-id301 . 1) (undo-tree-id302 . 6) (undo-tree-id303 . 1) (t 23106 33345 441208 176000)) nil (23106 33454 650322 359000) 0 nil]) ((#("§" 0 1 (face font-lock-string-face)) . -157) (undo-tree-id240 . -1) (undo-tree-id241 . 1) 158 (151 . 158) (150 . 152) (146 . 149) (146 . 148) (145 . 146) (#("£" 0 1 (face font-lock-string-face)) . -145) (undo-tree-id242 . -1) (undo-tree-id243 . 1) 146 (145 . 146) (#("logAPI" 0 6 (face font-lock-string-face)) . 145) (undo-tree-id244 . -5) (undo-tree-id245 . -5) (undo-tree-id246 . 6) (undo-tree-id247 . 5) (undo-tree-id248 . 4) (undo-tree-id249 . 3) (undo-tree-id250 . 2) (undo-tree-id251 . 1) (undo-tree-id252 . 1) (undo-tree-id253 . 1) (undo-tree-id254 . 1) (undo-tree-id255 . 1) (undo-tree-id256 . -5) (undo-tree-id257 . -5) (undo-tree-id258 . 1) (undo-tree-id259 . 1) (undo-tree-id260 . -5) (undo-tree-id261 . -5) (undo-tree-id262 . -5) (undo-tree-id263 . -5) (undo-tree-id264 . 1) (undo-tree-id265 . 1) (undo-tree-id266 . 6) (undo-tree-id267 . 1) (t 23106 32686 264639 900000)) nil (23106 33345 436152 520000) 0 nil]) ((145 . 151) (#("localhost" 0 9 (face font-lock-string-face)) . 145) (undo-tree-id221 . 9) (undo-tree-id222 . 9) (undo-tree-id223 . 9) (undo-tree-id224 . 9) (undo-tree-id225 . 9) (undo-tree-id226 . 9) (undo-tree-id227 . 9) (undo-tree-id228 . 9) (undo-tree-id229 . 9) (undo-tree-id230 . 9) (undo-tree-id231 . 9) (undo-tree-id232 . 9) (undo-tree-id233 . 9) (undo-tree-id234 . 9) (undo-tree-id235 . 9) (undo-tree-id236 . 9) (undo-tree-id237 . 9) (undo-tree-id238 . 9) (undo-tree-id239 . 9) (t 23106 32648 102608 430000)) nil (23106 32686 255080 868000) 0 nil]) ((138 . 145) (t 23106 31959 903583 793000)) nil (23106 32648 99904 592000) 0 nil]) (("        try_files $uri /index.php$is_args$args;
" . 154) (undo-tree-id198 . 48) (undo-tree-id199 . 42) (undo-tree-id200 . 48) (undo-tree-id201 . 42) (undo-tree-id202 . 48) (undo-tree-id203 . 48) (undo-tree-id204 . 48) (undo-tree-id205 . 48) (undo-tree-id206 . -8) (undo-tree-id207 . 48) (undo-tree-id208 . 9) (undo-tree-id209 . 48) (undo-tree-id210 . 48) (undo-tree-id211 . 9) (undo-tree-id212 . 40) (undo-tree-id213 . 48) 162) nil (23106 31959 900970 333000) 0 nil]) (("
" . 154) (undo-tree-id214 . 1) (undo-tree-id215 . 1) (undo-tree-id216 . 1) (undo-tree-id217 . 1) (undo-tree-id218 . 1) (undo-tree-id219 . 1) (undo-tree-id220 . 1) (t 23106 31957 239021 613000)) nil (23106 31959 900990 966000) 0 nil]) ((148 . 153) (#("${toString stableDocServerPort};" 0 1 (syntax-table #1# nix-syntax-antiquote t face font-lock-preprocessor-face) 1 2 (nix-syntax-antiquote t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face)) 2 10 (face font-lock-builtin-face) 30 31 (nix-syntax-antiquote t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face)) 31 32 (syntax-table #2# face font-lock-string-face)) . 148) (undo-tree-id146 . -32) (undo-tree-id147 . -30) (undo-tree-id148 . -31) (undo-tree-id149 . -1) (undo-tree-id150 . -2) (undo-tree-id151 . -30) (undo-tree-id152 . -31) (undo-tree-id153 . -1) (undo-tree-id154 . -2) (undo-tree-id155 . 32)) nil (23106 31957 236216 844000) 0 nil]) ((138 . 147) (#("http://${rebolServerIP}" 0 7 (face font-lock-string-face) 7 8 (syntax-table #1# nix-syntax-antiquote t face font-lock-preprocessor-face) 8 9 (nix-syntax-antiquote t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face)) 22 23 (nix-syntax-antiquote t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face))) . 138) (undo-tree-id156 . -22) (undo-tree-id157 . -22) (undo-tree-id158 . -22) (undo-tree-id159 . -23) (undo-tree-id160 . -8) (undo-tree-id161 . -9) (undo-tree-id162 . -22) (undo-tree-id163 . -23) (undo-tree-id164 . -8) (undo-tree-id165 . -9) (undo-tree-id166 . -22) (undo-tree-id167 . 23) (undo-tree-id168 . 19) (undo-tree-id169 . 23) (undo-tree-id170 . 16) (undo-tree-id171 . 19) (undo-tree-id172 . 19) (undo-tree-id173 . 16) (undo-tree-id174 . 23) (undo-tree-id175 . 19) (undo-tree-id176 . -23) (undo-tree-id177 . 23) (undo-tree-id178 . 23) (undo-tree-id179 . -22) (undo-tree-id180 . 20) (undo-tree-id181 . 23) (undo-tree-id182 . 17) (undo-tree-id183 . 20) (undo-tree-id184 . 16) (undo-tree-id185 . 17) (undo-tree-id186 . 15) (undo-tree-id187 . 16) (undo-tree-id188 . 2) (undo-tree-id189 . 15) (undo-tree-id190 . 1) (undo-tree-id191 . 2) (undo-tree-id192 . -8) (undo-tree-id193 . -9) (undo-tree-id194 . 15) (undo-tree-id195 . -9) (undo-tree-id196 . 1) (undo-tree-id197 . -23) 160 (t 23106 31914 392619 862000)) nil (23106 31957 236310 951000) 0 nil]) (("
    # this path MUST be exactly as docker-compose.fpm.volumes,
    # even if it doesn't exists in this dock.
    root /usr/share/nginx/html;
    index index.php index.html index.html;
" . 26) (undo-tree-id90 . -142) (undo-tree-id91 . -1) (undo-tree-id92 . -142) (undo-tree-id93 . -110) (undo-tree-id94 . -86) (undo-tree-id95 . -87) (undo-tree-id96 . 43) (undo-tree-id97 . 75) (undo-tree-id98 . 43) (undo-tree-id99 . 121) (undo-tree-id100 . 75) (undo-tree-id101 . 184) (undo-tree-id102 . 121) (undo-tree-id103 . 185) (undo-tree-id104 . 184) (undo-tree-id105 . 185) (undo-tree-id106 . 185) (undo-tree-id107 . 184) (undo-tree-id108 . 185) (undo-tree-id109 . 121) (undo-tree-id110 . 184) (undo-tree-id111 . 75) (undo-tree-id112 . 121) (undo-tree-id113 . -110) (undo-tree-id114 . -110) (undo-tree-id115 . -110) (undo-tree-id116 . 75) (undo-tree-id117 . 75) (undo-tree-id118 . -110) (undo-tree-id119 . -110) (undo-tree-id120 . -110) (undo-tree-id121 . -142) (undo-tree-id122 . 75) (undo-tree-id123 . 75) (undo-tree-id124 . 121) (undo-tree-id125 . 75) (undo-tree-id126 . 75) (undo-tree-id127 . 121) (undo-tree-id128 . 121) (undo-tree-id129 . 75) (undo-tree-id130 . 184) (undo-tree-id131 . 121) (undo-tree-id132 . 185) (undo-tree-id133 . 184) (undo-tree-id134 . -185) (undo-tree-id135 . 185) (undo-tree-id136 . 185) (undo-tree-id137 . -142) (undo-tree-id138 . 184) (undo-tree-id139 . 185) (undo-tree-id140 . 121) (undo-tree-id141 . 184) (undo-tree-id142 . 75) (undo-tree-id143 . 121) (undo-tree-id144 . 43) (undo-tree-id145 . 75) 168 (t 23106 31893 336375 189000)) nil (23106 31914 387944 416000) 0 nil]) (("    location ~ \\.php$ {
        fastcgi_split_path_info ^(.+\\.php)(/.+)$;
        fastcgi_pass phpfpm:9000; 
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
" . 436) (undo-tree-id40 . -253) (undo-tree-id41 . -6) (undo-tree-id42 . -253) (undo-tree-id43 . 232) (undo-tree-id44 . -22) (undo-tree-id45 . -22) (undo-tree-id46 . 232) (undo-tree-id47 . 232) (undo-tree-id48 . -22) (undo-tree-id49 . -22) (undo-tree-id50 . -22) (undo-tree-id51 . -22) (undo-tree-id52 . -253) (undo-tree-id53 . 248) (undo-tree-id54 . -254) (undo-tree-id55 . 248) (undo-tree-id56 . 248) (undo-tree-id57 . -6) (undo-tree-id58 . -253) (undo-tree-id59 . 224) (undo-tree-id60 . 248) (undo-tree-id61 . 174) (undo-tree-id62 . 224) (undo-tree-id63 . 139) (undo-tree-id64 . 174) (undo-tree-id65 . 106) (undo-tree-id66 . 139) (undo-tree-id67 . 32) (undo-tree-id68 . 106) (undo-tree-id69 . 1) (undo-tree-id70 . 32) (undo-tree-id71 . -252) (undo-tree-id72 . -253) (undo-tree-id73 . -252) (undo-tree-id74 . -253) (undo-tree-id75 . -252) (undo-tree-id76 . -253) (undo-tree-id77 . -252) (undo-tree-id78 . -253) (undo-tree-id79 . -252) (undo-tree-id80 . -253) (undo-tree-id81 . -252) (undo-tree-id82 . -253) (undo-tree-id83 . -22) (undo-tree-id84 . -23) (undo-tree-id85 . 232) (undo-tree-id86 . -23) (undo-tree-id87 . 2) (undo-tree-id88 . -253) 689) nil (23106 31893 334629 947000) 0 nil]) ((nil rear-nonsticky nil 266 . 267) (261 . 380)) nil (23106 31893 334643 909000) 0 nil]) (("    " . -261) (undo-tree-id89 . -4) 265 (261 . 265) (261 . 262) 283 (t 23106 31770 783636 368000)) nil (23106 31893 334651 93000) 0 nil]) ((235 . 241) ("s" . -235) (undo-tree-id0 . -1) (undo-tree-id1 . 1) ("e" . -236) (undo-tree-id2 . -1) (undo-tree-id3 . 1) ("r" . -237) (undo-tree-id4 . -1) (undo-tree-id5 . 1) 238 (232 . 238) ("192.168.99.100" . 232) (undo-tree-id6 . -13) (undo-tree-id7 . -13) (undo-tree-id8 . 3) (undo-tree-id9 . 4) (undo-tree-id10 . 3) (undo-tree-id11 . 6) (undo-tree-id12 . 4) (undo-tree-id13 . 7) (undo-tree-id14 . 6) (undo-tree-id15 . 10) (undo-tree-id16 . 7) (undo-tree-id17 . 11) (undo-tree-id18 . 10) (undo-tree-id19 . 14) (undo-tree-id20 . 11) (undo-tree-id21 . -13) (undo-tree-id22 . -14) (undo-tree-id23 . 14) (undo-tree-id24 . 14) (undo-tree-id25 . -13) (undo-tree-id26 . 12) (undo-tree-id27 . 14) (undo-tree-id28 . 11) (undo-tree-id29 . 12) (undo-tree-id30 . 8) (undo-tree-id31 . 11) (undo-tree-id32 . 7) (undo-tree-id33 . 8) (undo-tree-id34 . 5) (undo-tree-id35 . 7) (undo-tree-id36 . 4) (undo-tree-id37 . 5) (undo-tree-id38 . 1) (undo-tree-id39 . 4) 245 (t 23106 31754 698892 582000)) nil (23106 31770 781530 517000) 0 nil]) ((1 . 576) (t . -1)) nil (23106 31754 697020 868000) 0 nil]) nil nil (23106 31754 697025 65000) 0 nil] #3# 12190 70 nil]